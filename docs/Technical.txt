Início Técnico
1) Começei criando um projeto do tipo Class Library .Net Framework na camada 4 - Domain com o nome EP.CursoMvc.Domain onde:

EP => Nome da Empresa (Eduardo Pires Treinamentos):
CursoMvc => Nome do Projeto
Domain => Nome da Camada

POCO => Plain Old CLR Object (Bom e Velho Objeto CLR (Assembly do .Net))

2) Retirei todas as referências menos o System e o Analysers

3) Criei um outro projeto dentro de 5.1 de nome EP.CursoMvc.Infra.Data e instalei o Entity Framework:

3.1) install-package entityframework dentro de 5 - Infra\5.1 - Data
3.2) enable-migration
3.3) update-database -Script (apenas gera o script para sua análise, é bom para evitar retrabalhos)

4) Criei um outro projeto em 3 - Application de nome EP.CursoMvc.Application e instalei o AutoMapper

4.1) Install-Package automapper (em 3 - Application \ EP.CursoMvc.Application)

5) Criei um outro projeto em 1 - Presentation \ EP.CursoMvc.UI.Site

5.1) Alterei o Web.config a parte de conexão com o banco alterando os nomes padrões em DataDirectory
e Catalog para cursoMvc

5.2) Rodar o comando update-database para gerar as tabelas de Cliente/Endereco
em 5 - Infra\5.1 - EP.CursoMvc.Infra.Data

5.3) Em 1 - Presentation\Ep.CursoMvc.Ui.Site
5.3.1) Em controller vou adicionar via scaffold com views todas as controllers padrões
5.3.2) No contexto vou usar o contexto existente do Identity (apenas um workaround...)
5.3.3) Em ApplicationDbContext apagar a propriedade criada no scaffold
5.3.4) Na ClientesController remover o parâmetro db baseado em ApplicationDbContext

6) Em 5 - Infra\5.1 - EP.CursoMvc.Infra.Data rodar o comando para instalar o Dapper:

install-package dapper

7) No projeto 5 \ 5.2 \ EP.CursoMvc.Infra.CrossCutting.Filters instalar o Mvc:

install-package Microsoft.AspNet.Mvc
Adicionar 2 assemblies: System.Web e System.Web.Assemblies

8) Para trabalhar com o mecanismo de injeção de dependência no Mvc do .Net Framework instalar

1 - Presentation\EP.CursoMvc.UI.Site: Install-Package SimpleInjector.MVC3

Referências:

https://www.nuget.org/packages/SimpleInjector.MVC3/

https://simpleinjector.org/index.html

9) Para trabalhar com o mecanismo de injeção de dependência SIMPLES no .Net Framework instalar

5\5.2 - CrossCutting\EP.CursoMvc.Infra.CrossCutting.IoC: Install-Package SimpleInjector

10) Implementar em 4 - Domain\EP.CursoMvc.Domain e 3 - Application\EP.CursoMvc.Application e na 1 - Presentation\EP.CursoMvc.UI.Site o seguinte comando:

Install-Package DomainValidation

